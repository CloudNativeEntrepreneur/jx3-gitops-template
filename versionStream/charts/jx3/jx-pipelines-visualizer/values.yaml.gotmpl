ingress:
  enabled: true
  annotations:
    # lets enable basic auth by default

    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: jx-basic-auth-htpasswd
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Jenkins X Pipeline Dashboard'

  apiVersion: "networking.k8s.io/v1"

  hosts:
  - "dashboard{{ .Values.jxRequirements.ingress.namespaceSubDomain | default "." }}{{ .Values.jxRequirements.ingress.domain | default "cluster.local" }}"

  tls:
    enabled: {{ .Values.jxRequirements.ingress.tls.enabled }}
    secrets:
{{- if and (.Values.jxRequirements.ingress.tls.enabled) (hasKey .Values.jxRequirements.ingress "tls") (hasKey .Values.jxRequirements.ingress.tls "secretName") }}
      "{{ .Values.jxRequirements.ingress.tls.secretName }}": {}
{{- else if .Values.jxRequirements.ingress.tls.production }}
      "tls-{{ .Values.jxRequirements.ingress.domain | replace "." "-" }}-p": {}
{{- else }}
      "tls-{{ .Values.jxRequirements.ingress.domain | replace "." "-" }}-s": {}
{{- end }}

{{- if and (eq .Values.jxRequirements.cluster.provider "eks") (hasKey .Values.jxRequirements.cluster "region") }}
pod:
  env:
    AWS_REGION: {{ .Values.jxRequirements.cluster.region }}
{{- else if eq .Values.jxRequirements.cluster.provider "aks" }}
{{- if and (hasKey .Values.jxRequirements.cluster "azure") (hasKey .Values.jxRequirements.cluster.azure "storage") (hasKey .Values.jxRequirements.cluster.azure.storage "storageAccountName")}}
pod:
  env:
    AZURE_STORAGE_ACCOUNT: {{ .Values.jxRequirements.cluster.azure.storage.storageAccountName }}
{{- end }}
{{- end }}

serviceAccount:
  annotations:
{{- if eq .Values.jxRequirements.cluster.provider "gke" }}
    iam.gke.io/gcp-service-account: {{ .Values.jxRequirements.cluster.clusterName }}-jxui@{{ .Values.jxRequirements.cluster.project }}.iam.gserviceaccount.com
{{- else if and (eq .Values.jxRequirements.cluster.provider "eks") (hasKey .Values.jxRequirements.cluster "project")  }}
    eks.amazonaws.com/role-arn: arn:aws:iam::{{ .Values.jxRequirements.cluster.project }}:role/{{ .Values.jxRequirements.cluster.clusterName }}-jx-pipelines-visualizer
{{- else }}
    installed-by: jenkins-x
{{- end }}

config:

  # build a link for the pipeline trace, to our Grafana instance running in the jx-observability namespace
  # Note that we have to fix the ingress.namespaceSubDomain with the same logic used in jx-gitops:
  # https://github.com/jenkins-x-plugins/jx-gitops/blob/v0.2.47/pkg/cmd/helmfile/resolve/resolve.go#L236
  pipelineTraceURLTemplate: >-
    http://grafana{{ .Values.jxRequirements.ingress.namespaceSubDomain | replace "jx" "jx-observability" }}{{ .Values.jxRequirements.ingress.domain }}/explore?left=%5B%22now%22,%22now%22,%22Tempo%22,%7B%22query%22:%22{{`{{.TraceID}}`}}%22%7D%5D

  # allow the UI to query the long-term storage directly to find an old pipeline
  {{- if hasKey .Values.jxRequirements "storage" }}
  {{- range .Values.jxRequirements.storage }}
  {{- if eq .name "logs" }}
    {{- /*
      Cant use urlJoin with the golang template since it will url escape the template, so use urlJoin to inject a token which is replaced later with the template
      Also, it appears that the log writer clobbers the path part of the url, so lets do the same here
    */}}w
    {{- $urlDict := urlParse .url }}
    {{- $_ := set $urlDict "path" "/___JX_PATH___" }}
    {{- $url := urlJoin $urlDict }}
  archivedLogsURLTemplate: >-
    {{ $url | replace "/___JX_PATH___" `/jenkins-x/logs/{{.Owner}}/{{.Repository}}/{{if hasPrefix .Branch "pr"}}{{.Branch | upper}}{{else}}{{.Branch}}{{end}}/{{.Build}}.log` }}
  archivedPipelinesURLTemplate: >-
    {{ $url | replace "/___JX_PATH___" `/jenkins-x/logs/{{.Owner}}/{{.Repository}}/{{if hasPrefix .Branch "pr"}}{{.Branch | upper}}{{else}}{{.Branch}}{{end}}/{{.Build}}.yaml` }}
  archivedPipelineRunsURLTemplate: >-
    {{ $url | replace "/___JX_PATH___" `/jenkins-x/pipelineruns/{{.Namespace}}/{{.Name}}.yaml` }}
  {{- end }}
  {{- end }}
  {{- end }}
