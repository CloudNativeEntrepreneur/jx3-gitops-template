multibranchPipelineJob('{{ .FullName }}') {
    branchSources {
{{- if eq .GitServerURL "https://github.com" }}
        github {
            id('{{ .ID }}')
            scanCredentialsId('tekton-git')
            repoOwner('{{ .Owner }}')
            repository('{{ .Repository }}')
        }
{{- else }}
        git {
            id('{{ .ID }}')
            credentialsId('tekton-git')
            remote('{{ .CloneURL }}')
        }
{{- end }}
    }
    configure { node ->
      def traits = node / 'sources' / 'data' / 'jenkins.branch.BranchSource' / 'source' / 'traits'
      traits << 'org.jenkinsci.plugins.github__branch__source.BranchDiscoveryTrait' {
        strategyId(1)
      }
      traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {
        strategyId(1)
      }
      traits << 'org.jenkinsci.plugins.github__branch__source.ForkPullRequestDiscoveryTrait' {
        strategyId(1)
        trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustPermission')
      }
      traits << 'jenkins.scm.impl.trait.WildcardSCMHeadFilterTrait' {
        includes('main master PR-*')
        excludes()
      }
    }
}
